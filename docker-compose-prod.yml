version: '3.7'

services:

  users:
    container_name: "TTD-users"
    build:
      context: ./services/users
      dockerfile: Dockerfile-prod
    expose:
      - 5000
    environment:
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=${FLASK_ENV_PRODUCTI0N}
      - APP_SETTINGS=${APP_SETTINGS}
      - SECRET_KEY=${SECRET_KEY}

    depends_on:
      - users-db

  users-db:
    container_name: "TTD-mongodb"
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    expose:
      - 27017
    env_file:
     - ".env"
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
    #   - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    #   - MONGO_INITDB_DATABASE=${MONGO_INITDB}

    # volumes:
      # - ./services/users/project/data/:/data/db

    # volumes:
    #  - ".services/users/project/db/data:/data/db"                           # Database files
    #  - ./init.js:/docker-entrypoint-initdb.d/init.js
    #  - ".services/users/project/db/fixtures/default.js:/docker-entrypoint-initdb.d/default.js"    # To create Db at start

  cleanui:
    container_name: "TTD-cleanui"
    build:
      context: ./services/cleanui
      dockerfile: Dockerfile
    ports:
      - 3007:3000
    env_file:
     - ".env" # stores credentials and system variables
    environment:
      - NODE_ENV=${NODE_ENV}
      - NODE_PATH=${NODE_PATH}
      # configure http://localhost as web-browser url
      - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
      # enable chokidar to use polling to watch for file changes 
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
    depends_on:
      - users
      - users-db

  nginx:
  build:
    context: ./services/nginx
    dockerfile: Dockerfile-prod
  restart: always
  ports:
    - 80:80
  depends_on:
    - users